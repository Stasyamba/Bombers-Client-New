<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:mx1="library://ns.adobe.com/flex/halo"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 implements="components.common.base.window.IWindow"
		 xmlns:preloaders="components.common.utils.preloaders.*"
		 skinClass="skins.common.EmptyPopUpS"
		 creationComplete="panelCreationComplete();"
		 borderVisible="false"
		 dropShadowVisible="false"
		 width="767" height="421"
		 alpha="0" 
		 xmlns:inventorynew="components.pages.global.inventorynew.*" 
		 xmlns:inventory="components.pages.global.inventorynew.inventory.*" 
		 xmlns:flexcomponents="components.common.flexcomponents.*" 
		 xmlns:market="components.pages.global.inventorynew.market.*" xmlns:resources="components.pages.world.toppanel.resources.*" 
		 >
	
	<fx:Declarations>
		
		
		<s:Animate id="disapearingA" target="{this}" duration="300"
				   effectEnd="{close();}">
			<s:SimpleMotionPath property="alpha"
								valueFrom="1"
								valueTo="0"
								/>
		</s:Animate>
		
		<s:Animate id="apearingA" target="{this}" duration="500">
			<s:SimpleMotionPath property="alpha"
								valueFrom="0" valueTo="1"
								/>
		</s:Animate>
		
		
		<s:Animate id="resourceTipDisappearingA" target="{needResourceToolTipGroup}" duration="3000"
				   effectStart="{needResourceToolTipGroup.visible = true;}"
				   effectEnd="{needResourceToolTipGroup.visible = false;}">
			<s:SimpleMotionPath property="alpha"
						  valueFrom="1"
						  valueTo="0.1"
								/>
		</s:Animate>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import skins.buttons.CloseButtonOriginS;
			
		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import components.pages.global.inventorynew.inventory.NeedResourceToolTip;
			import components.pages.world.windows.tutorial.part5.TutorialInventoryOpenedToolTip3;
			import components.pages.world.windows.tutorial.part5.TutorialInventoryOpenedToolTip2;
			import components.pages.world.windows.tutorial.part5.TutorialInventoryOpenedToolTip4;
			import components.pages.world.windows.tutorial.part5.TutorialInventoryOpenedToolTip1;
			import components.common.tutorial.TutorialPartType;
			import mx.managers.PopUpManager
			
			public function close():void {
				//Context.Model.windowsManager.deleteWindow(this);
				
				/* tutorial */
				if(Context.Model.currentTutorialPart != TutorialPartType.DONE)
				{
					/* dispatch some event */
				}
				
				PopUpManager.removePopUp(this);
				
				inventoryView.destroy();
				marketView.destroy();
			}
			
			public function closeWrapper():void {
				disapearingA.play();
			}
			
			public function closeWrapper1(e:ContextEvent):void {
				closeWrapper();
			}
			
			public var isShop: Boolean = false;
			
			private function panelCreationComplete():void {
				
				//Context.Model.windowsManager.closeAll(true);
				//Context.Model.windowsManager.addWindow(this);
				
				Context.Model.dispatchCustomEvent(ContextEvent.GPAGE_SET_GAME_FOCUS);
				Context.Model.addCustomListener(ContextEvent.IM_CLOSE, closeWrapper1);
				
				if(isShop)
				{
					setTab(new ContextEvent("changeView", false, false, TopMenu.STATE_MARKET));
					topMenu.selectedState = TopMenu.STATE_MARKET;
				}
				
				apearingA.play();
				
				if(!isShop)
				{
					Context.Model.dispatchCustomEvent(ContextEvent.IM_NEW_ITEM, false);
				}
				
				Context.Model.addCustomListener(ContextEvent.IM_NEED_RESOURCES, function (e: ContextEvent): void
				{
					needResourceToolTipGroup.removeAllElements();
					var contentResourceTip:NeedResourceToolTip = new NeedResourceToolTip();
					needResourceToolTipGroup.addElement(contentResourceTip);
					resourceTipDisappearingA.stop();
				
					resourceTipDisappearingA.play();
				});
				
				Context.Model.addCustomListener(ContextEvent.IM_NEED_RESOURCES_CLOSE, function (e: ContextEvent): void
				{
					//needResourceToolTip.removeAllElements();
				});
				
				/* tutorial */
				if(Context.Model.currentTutorialPart != TutorialPartType.DONE)
				{
					closeButton.visible = false;
					topMenu.enabled = false;
					tutorialGroup.addElement(new TutorialInventoryOpenedToolTip1());
					
					Context.Model.addCustomListener(ContextEvent.TUTORIAL_INVENTORY_TUTORIAL2, function (e: ContextEvent): void
					{
						tutorialGroup.removeAllElements();
						tutorialGroup.addElement(new TutorialInventoryOpenedToolTip2());
					});
					
					Context.Model.addCustomListener(ContextEvent.TUTORIAL_INVENTORY_TUTORIAL3, function (e: ContextEvent): void
					{
						tutorialGroup.removeAllElements();
						tutorialGroup.addElement(new TutorialInventoryOpenedToolTip3());
					});
					
					Context.Model.addCustomListener(ContextEvent.TUTORIAL_INVENTORY_TUTORIAL4, function (e: ContextEvent): void
					{
						tutorialGroup.removeAllElements();
						tutorialGroup.addElement(new TutorialInventoryOpenedToolTip4());
					});
				}
				
			}
			
			private function setTab(e: ContextEvent): void
			{
				switch(e.data)
				{
					case TopMenu.STATE_INVENOTRY:
						Context.Model.dispatchCustomEvent(ContextEvent.IM_NEW_ITEM, false);
						marketView.visible = false;
						inventoryView.visible = true;
						break;
					case TopMenu.STATE_MARKET:
						marketView.visible = true;
						inventoryView.visible = false;
						break;
				}
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<!--<s:BorderContainer width="2000" height="2000" y="-1000" x="-1000" backgroundColor="0x000000" alpha="0.3" />
	-->
	<s:BorderContainer backgroundImage="@Embed(source='assets/windows/bg.jpg')"
					   backgroundImageFillMode="repeat"
					   width="767" height="421"
					   borderVisible="true" borderColor="0x322916" borderWeight="3"
					   cornerRadius="30"
					   />
	
	<s:VGroup width="764" height="418" x="3" y="3" verticalAlign="top" gap="0">
		
		<inventorynew:TopMenu id="topMenu" stateChanged="setTab(event);" />
		<!-- content -->
		<s:Group height="100%">
			<inventory:InventoryView id="inventoryView" />
			<market:MarketView id="marketView" visible="false" />
		</s:Group>
		
		
	</s:VGroup>
	
	<flexcomponents:CloseButton id="closeButton" skinClass="skins.buttons.CloseButtonOriginS" scale="0.7" x="722" y="10" click="closeWrapper();" />
	
	<resources:ResourcesView y="-42" x="406" />
	
	<s:Group id="tutorialGroup" />
	<s:Group id="needResourceToolTipGroup" />
	
	<s:controlBarContent/>
</s:Panel>