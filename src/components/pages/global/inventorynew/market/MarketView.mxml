<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:pack="components.pages.global.inventorynew.inventory.pack.*" 
		  xmlns:equip="components.pages.global.inventorynew.inventory.equip.*"
		  creationComplete="init();" 
		  width="100%" height="100%" 
		  horizontalAlign="left" verticalAlign="middle"
		  gap="15"
		  xmlns:leftmenu="components.pages.global.inventorynew.market.leftmenu.*"
		  >
	
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import components.common.bombers.BomberObject;
			import components.common.bombers.BomberType;
			import components.common.items.ItemObject;
			import components.common.items.ItemType;
			import components.common.items.categories.ItemCategory;
			import components.common.items.categories.MarketCategory;
			import components.pages.global.inventorynew.market.content.WeaponContent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			import skins.market.scroller.ScrollerS;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var currentItemCollection: ArrayCollection = new ArrayCollection();
			private var lastType: *;
			
			
			private function init(): void
			{	
				itemsList.scroller.setStyle("skinClass", ScrollerS);
			}
			
			public function destroy(): void
			{
				
			}
			
			private function showItem(e: IndexChangeEvent):void
			{
				var index: int;
				
				if(e == null)
				{
					index = 0;
				}else
				{
					index = e.newIndex
				}
				
				
				var item:ItemMarket = currentItemCollection[index];
				var content:*;
				
				if(item.type is ItemType)
				{
					/* weapon */
					
					if(!(lastType is ItemType))
					{
						itemContentGroup.removeAllElements();
					}
					
					content = new WeaponContent();
					(content as WeaponContent).initContent(item.type);
					
					itemContentGroup.addElement(content);
				}
				
				
				
				if(item.type is BomberType)
				{
					/* bombers */
					
					if(!(lastType is BomberType))
					{
						itemContentGroup.removeAllElements();
					}
				}
				
				lastType = ItemType;
			}
			
			private function setCategory(e: ContextEvent): void
			{
				if(e.data is MarketCategory)
				{
					itemContentGroup.removeAllElements();
					currentItemCollection = new ArrayCollection();
					
					for each(var itemObject: ItemObject in Context.Model.itemsManager.getItems())
					{
						var mc: MarketCategory = Context.Model.itemsCategoryManager.getItemMarketCategory(itemObject.type);
						var ic: ItemCategory = Context.Model.itemsCategoryManager.getItemCategory(itemObject.type);
						
						if(mc == e.data)
						{
							currentItemCollection.addItem(new ItemMarket(itemObject.type, itemObject.viewObject.smallImageURL, ic));
						}
					}
					
					/* 
					change layout etc
					
					switch(e.data)
					{
						case MarketCategory.BOMBS_AND_POISONS:
							break;
						case MarketCategory.BOMBERS:
							
							break;
					} */
					
					showItem(null);
				}
			}
			
		]]>
	</fx:Script>
	
	<s:Group>
		<s:BorderContainer id="selectedGroup"
						   width="127" height="292" 
						   backgroundImage="@Embed(source='assets/windows/bgBright.jpg')"
						   backgroundImageFillMode="repeat"
						   borderVisible="false"
						   cornerRadius="0"
						   />
		<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="top"
				  paddingTop="20">
			
			<leftmenu:LeftMenu stateChanged="setCategory(event);" />
			
			<s:HGroup paddingLeft="10" paddingTop="-20">
				
				<s:BorderContainer	backgroundImage="@Embed(source='assets/windows/bgDark.jpg')"
									backgroundImageFillMode="repeat"
									borderVisible="false"
									cornerRadius="0"
									width="600" height="291"
									>
					
						<s:HGroup height="100%" verticalAlign="middle"
								  paddingLeft="20">
							
							<s:Group>
								<s:VGroup height="100%" verticalAlign="middle" x="250">
									<s:BorderContainer id="bgRect"
													   backgroundImage="@Embed(source='assets/windows/bg.jpg')"
													   backgroundImageFillMode="repeat"
													   height="{itemsList.height}"
													   cornerRadius="0"
													   minWidth="22" minHeight="14"
													   borderVisible="false"
													   />
								</s:VGroup>
								
								<s:List id="itemsList" dataProvider="{currentItemCollection}" itemRenderer="components.pages.global.inventorynew.market.MarketIR"
										contentBackgroundAlpha="0" borderVisible="false"
										change="showItem(event);"
										>
									<s:layout>
										<s:TileLayout requestedColumnCount="3" requestedRowCount="3"
													  verticalGap="0" horizontalGap="0"
													  />
									</s:layout>
								</s:List>
							</s:Group>
							
							
							
							
							<s:HGroup id="itemContentGroup" width="100%" height="100%"
									  horizontalAlign="center" verticalAlign="top"
									  paddingTop="30" />
						</s:HGroup>
						
				</s:BorderContainer>
				
			</s:HGroup>
		</s:HGroup>
	</s:Group>
	
	
	
	
</s:HGroup>
