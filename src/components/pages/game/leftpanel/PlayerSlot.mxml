<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:leftpanel="components.pages.game.leftpanel.*"
		 xmlns:flexcomponents="components.common.flexcomponents.*" 
         creationComplete="init();"
         width="61" height="80" 
		 >


    <fx:Declarations>
        <s:Parallel id="apearingA" effectStart="{readyGroup.alpha = 0;}"
                    duration="150">
            <s:Animate target="{readyGroup}">
                <s:SimpleMotionPath property="alpha" valueFrom="0" valueTo="1.0"/>
            </s:Animate>

            <s:Animate target="{blurFilter}">
                <s:SimpleMotionPath property="blurX" valueFrom="70" valueTo="0.0"/>
                <s:SimpleMotionPath property="blurY" valueFrom="70" valueTo="0.0"/>
            </s:Animate>

            <s:Sequence repeatCount="1000">
                <s:Parallel duration="{pulseAnimationDuration}">

                    <s:Animate target="{readyGroup}">
                        <s:SimpleMotionPath property="scaleX" valueFrom="{readyGroup.scaleX}"
                                            valueTo="{scaleAnimationSize}"/>
                    </s:Animate>
                    <s:Animate target="{readyGroup}">
                        <s:SimpleMotionPath property="scaleY" valueFrom="{readyGroup.scaleY}"
                                            valueTo="{scaleAnimationSize}"/>
                    </s:Animate>
                    <s:Animate target="{readyGroup}">
                        <s:SimpleMotionPath property="y" valueFrom="{startYPostion}" valueTo="{differenceYPosition}"/>
                    </s:Animate>


                </s:Parallel>

                <s:Parallel duration="{pulseAnimationDuration}">

                    <s:Animate target="{readyGroup}">
                        <s:SimpleMotionPath property="scaleX" valueFrom="{scaleAnimationSize}" valueTo="1"/>
                    </s:Animate>
                    <s:Animate target="{readyGroup}">
                        <s:SimpleMotionPath property="scaleY" valueFrom="{scaleAnimationSize}" valueTo="1"/>
                    </s:Animate>
                    <s:Animate target="{readyGroup}">
                        <s:SimpleMotionPath property="y" valueFrom="{differenceYPosition}" valueTo="{startYPostion}"/>
                    </s:Animate>


                </s:Parallel>

            </s:Sequence>

        </s:Parallel>

        <s:Parallel id="disapearingA" effectEnd="{readyGroup.alpha = 0;}"
                    duration="150">
            <s:Animate target="{readyGroup}">
                <s:SimpleMotionPath property="alpha" valueFrom="1" valueTo="0.0"/>
            </s:Animate>

            <s:Animate target="{blurFilter}">
                <s:SimpleMotionPath property="blurX" valueFrom="0" valueTo="70"/>
                <s:SimpleMotionPath property="blurY" valueFrom="0" valueTo="70"/>
            </s:Animate>
        </s:Parallel>

    </fx:Declarations>

    <fx:Script>
		<![CDATA[
			import components.common.bombers.BomberColorType;
			import components.common.profiles.SocialProfile;
			import components.common.utils.adjustcolor.ColorMatrix;
			import components.common.utils.adjustcolor.ColorMatrixObject;
			
			import engine.games.regular.RegularGame;
			import engine.profiles.LobbyProfile;
			
			import flash.net.navigateToURL;

        private var _profile:LobbyProfile;

        [Bindable]
        private var _isReady:Boolean = false;
        [Bindable]
        private var isProfileNull:Boolean = true;
        [Bindable]
        private var levelStringView:String = "0";

        [Bindable]
        private var readyGroupHeight:Number = 0;
        [Bindable]
        private var scaleAnimationSize:Number = 1.05;
        [Bindable]
        private var pulseAnimationDuration:Number = 200;
        [Bindable]
        private var differenceYPosition:Number;
        [Bindable]
        private var startYPostion:Number = -10;

		public var playerColor: BomberColorType;
			
        public function hasAnyPlayer():Boolean {
            return !isProfileNull;
        }

        public function hasPlayer(id:String):Boolean {
            return !isProfileNull && (_profile.id == id);
        }

        public function set isReady(value:Boolean):void {
            _isReady = value;

            if (value) {
                disapearingA.stop();
                apearingA.stop();
                apearingA.play();
            } else {
                disapearingA.stop();
                apearingA.stop();
                disapearingA.play();
            }
        }

        public function get profile():LobbyProfile {
            return _profile;
        }

        public function setPlayer(value:LobbyProfile):void {
            if (value == null) {
                removePlayer();
            }

			lifeBar.isActive = true;
			/* testing */
			/* get color from lobby */
			
			lifeBar.initContent(10,4,BomberColorType.BASE_BLUE);
			
            _profile = value;
            isProfileNull = false;

            levelStringView = Context.Model.experianceManager.getLevel(value.experience).level.toString();
			userPhotoGroup.initPhoto(_profile.photoURL);
            bgRect.alpha = 1;
        }	
			
        public function removePlayer():void 
		{
			lifeBar.isActive = false;
            isProfileNull = true;
			userPhotoGroup.initPhoto("");
            levelStringView = "";
            bgRect.alpha = 0.3;
        }

        private function init():void {
            _profile = null;
            readyGroupHeight = readyGroup.height;
            differenceYPosition = -10 + readyGroupHeight - readyGroupHeight * scaleAnimationSize;

            var cmo:ColorMatrixObject = new ColorMatrixObject(80);
            var cm:ColorMatrix = new ColorMatrix();
            cm.applyColorMatrixObject(cmo);

            colorMatrixFilter.matrix = cm.matrix;
        }
			
		private function goToSocialProfile():void
		{
			if(_profile != null)
			{
				var link: String = SocialProfile.getSocialProfileLink(_profile.id, Context.Model.currentSettings.currentSocialWeb);
				navigateToURL(new URLRequest(link));
			}
		}
			
		/* Сделать контекстное меню в котором будет пункт - "Нравится!", "Бросить вызов", "Профайл" */
			
        ]]>
	</fx:Script>

	<leftpanel:LifeBar id="lifeBar" x="-15" />
	
    <s:Rect width="47" height="63"
            alpha="0.29"
            id="bgRect">
        <s:fill>
            <s:SolidColor color="0x000000"/>
        </s:fill>
        <s:stroke>
            <s:SolidColorStroke color="0x69696a" weight="2" />
        </s:stroke>
    </s:Rect>
	
    <s:HGroup width="47" height="63"
              horizontalAlign="center" verticalAlign="middle"
              visible="{isProfileNull}"
            >
        <s:Label text="Никого" fontSize="14" fontFamily="mpbc" color="0x6c6c6c"/>
    </s:HGroup>

	<flexcomponents:UserPhotoGroup id="userPhotoGroup" width="47" height="63"
								   x="1" y="1"
								   visible="{!isProfileNull}"
								   />

    <s:Group id="levelGroup" visible="{!isProfileNull}"
             x="24" y="49" scaleX="0.8" scaleY="0.8"
            >
        <s:BitmapImage id="bgLevelImage" source="@Embed(source='assets/pagegame/leftpanel/levelBg.png')"/>

        <s:HGroup width="{bgLevelImage.width}" height="{bgLevelImage.height}"
                  horizontalAlign="center" verticalAlign="middle"
                >
            <s:Label text="{levelStringView} ур." fontSize="14" fontFamily="mpbc" color="0xffffff"/>
        </s:HGroup>
    </s:Group>

	<!-- not enough energy group -->
	
    <s:Group id="readyGroup" y="{startYPostion}" x="65"
             visible="{_isReady}"
            >
        <s:BitmapImage id="readyBg"
                       source="@Embed(source='assets/pagegame/leftpanel/readyBg.png')"
                       smooth="true"
                />
        <s:Label text="Готов" x="33" y="8" fontFamily="mpbc" fontSize="20" color="0xffffff"/>

        <s:filters>
            <s:BlurFilter id="blurFilter" blurX="0" blurY="0"/>
            <s:ColorMatrixFilter id="colorMatrixFilter"/>
        </s:filters>

    </s:Group>

</s:Group>
