<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx"
          xmlns:resources="components.pages.world.toppanel.resources.*"
          gap="5"
          creationComplete="init();"
        >
	<fx:Script>
		<![CDATA[
			import skins.buttons.toppanel.CrystallsButtonS;
		]]>
	</fx:Script>

    <fx:Declarations>
    </fx:Declarations>

    <fx:Script>
		<![CDATA[
        import components.common.resources.ResourceType

        import loading.SoundManager

        [Embed(source="assets/sounds/pageworld/rPFO_1.mp3")]
        [Bindable]
        public var sndDropDownClass:Class;

        public var sndDropDown:Sound = new sndDropDownClass() as Sound;
        public var sndChannel:SoundChannel;


        private function init():void {

            Context.Model.addCustomListener(ContextEvent.GP_RESOURCE_CHANGED, function (e:ContextEvent):void {
				
				crystallsLabel.text = Context.Model.currentSettings.gameProfile.resources.crystals.value.toString();
				goldLabel.text = Context.Model.currentSettings.gameProfile.resources.gold.value.toString();
				
                //antimatterResource.setResource(Context.Model.currentSettings.gameProfile.resources.antimatter.value);
                //adamantResource.setResource(Context.Model.currentSettings.gameProfile.resources.adamant.value);
                //crystalsResource.setResource(Context.Model.currentSettings.gameProfile.resources.crystals.value);
                //goldResource.setResource(Context.Model.currentSettings.gameProfile.resources.gold.value);
            });


            if (Context.Model.currentSettings.gameProfile != null && Context.Model.currentSettings.gameProfile.resources != null) {
				
				crystallsLabel.text = Context.Model.currentSettings.gameProfile.resources.crystals.value.toString();
				goldLabel.text = Context.Model.currentSettings.gameProfile.resources.gold.value.toString();
				
                //antimatterResource.setResource(Context.Model.currentSettings.gameProfile.resources.antimatter.value, true);
                //adamantResource.setResource(Context.Model.currentSettings.gameProfile.resources.adamant.value, true);
                //crystalsResource.setResource(Context.Model.currentSettings.gameProfile.resources.crystals.value, true);
                //goldResource.setResource(Context.Model.currentSettings.gameProfile.resources.gold.value, true);
            }
        }


        private function resourceFocusOver(e:Event):void {
            // play some sound
            // sndChannel = sndDropDown.play();
            SoundManager.playSound(SoundManager.RESOURCE_MOUSE_OVER);

            for (var i:int = 0; i <= resourcesGroup.numElements - 1; i++) {
                var el:* = resourcesGroup.getElementAt(i);
                if (el is IResourceView && el != e.currentTarget) {
                    (el as IResourceView).closeToolTip();

                    // may be acceleratedCloseToolTip - for another behavor
                }
            }
        }
			
		private function showResourceMarket(): void	
		{
			Context.Model.dispatchCustomEvent(ContextEvent.RESOURCE_MARKET_SHOW);
		}
			
        ]]>
	</fx:Script>


    <s:HGroup id="resourcesGroup">


     <!--
		
		<resources:ResourceTemplate id="antimatterResource"
                                    resourceType="{ResourceType.ANTIMATTER}"
                                    toolTipCalledFirst="resourceFocusOver(event);"
                />
        <resources:ResourceTemplate id="adamantResource"
                                    resourceType="{ResourceType.ADAMANT}"
                                    toolTipCalledFirst="resourceFocusOver(event);"
                />
        <resources:ResourceTemplate id="crystalsResource"
                                    resourceType="{ResourceType.CRYSTALS}"
                                    toolTipCalledFirst="resourceFocusOver(event);"
                />
        <resources:ResourceTemplate id="goldResource"
                                    resourceType="{ResourceType.GOLD}"
                                    toolTipCalledFirst="resourceFocusOver(event);"
                />
		
	   -->
		<s:HGroup gap="17">
			<s:HGroup verticalAlign="middle" paddingTop="1">
				
				<s:Label id="crystallsLabel" text="2" fontFamily="mpbc" fontSize="24" color="0xe3a8f2">
					<s:filters>
						<s:DropShadowFilter blurX="3" blurY="3" color="0x000000" alpha="0.5"
											distance="1"
											/>
					</s:filters>
				</s:Label>
				<s:Button skinClass="skins.buttons.toppanel.CrystallsButtonS" useHandCursor="true" buttonMode="true"
						  click="showResourceMarket()"
						  />
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle" paddingTop="3">
				<s:Label id="goldLabel" text="1726" fontFamily="mpbc" fontSize="24" color="0xffe500">
					<s:filters>
						<s:DropShadowFilter blurX="3" blurY="3" color="0x000000" alpha="0.5"
											distance="1"
											/>
					</s:filters>
				</s:Label>
				<s:Button skinClass="skins.buttons.toppanel.GoldButtonS" useHandCursor="true" buttonMode="true"
						  click="showResourceMarket()"
						  />
			</s:HGroup>
		</s:HGroup>
		
		
		
	</s:HGroup>
</s:HGroup>
