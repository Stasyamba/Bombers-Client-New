<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:mx1="library://ns.adobe.com/flex/halo"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 creationComplete="panelCreationComplete();"
		 borderVisible="false"
		 dropShadowVisible="false"
		 skinClass="skins.common.EmptyPopUpS"
		 xmlns:flexcomponents="components.common.flexcomponents.*"
		 implements="components.common.base.window.IWindow" 
		 xmlns:preloaders="components.common.utils.preloaders.*" 
		 xmlns:progress="components.pages.world.windows.tutorial.part1.progress.*" 
		 xmlns:tutorial="components.pages.world.windows.tutorial.*"
		 alpha="0"
		 >
	<fx:Script>
		<![CDATA[
			import loading.SoundManager;
			
			import skins.buttons.CloseButtonOriginS;
			import skins.buttons.tutorial.LocationButtonS;
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<s:Sequence id="disapearingAnimation" effectEnd="{close();}">
			<!--<s:Animate target="{this}" duration="500">
			<s:SimpleMotionPath property="x"
			valueFrom="100"
			valueTo="800"
			/>
			</s:Animate>-->
			<s:Animate target="{this}" duration="100">
				<s:SimpleMotionPath property="alpha"
									valueFrom="{this.alpha}"
									valueTo="0"
									/>
			</s:Animate>
		</s:Sequence>
		
		<s:Sequence id="apearingAnimation" startDelay="100">
			<s:Animate target="{this}" duration="550">
				<s:SimpleMotionPath property="alpha"
									valueFrom="0"
									valueTo="1"
									/>
			</s:Animate>
		</s:Sequence>
		
		<s:Parallel target="{plusOneGroup}" id="pulseA" repeatCount="10000">
			<s:Sequence>
				<s:Animate duration="500">
					<s:SimpleMotionPath property="y" valueFrom="0" valueTo="-10" />
				</s:Animate>
				<s:Animate duration="300">
					<s:SimpleMotionPath property="y" valueFrom="-10" valueTo="0" />
				</s:Animate>
			</s:Sequence>
			
			<s:Sequence>
				<s:Animate duration="250">
					<s:SimpleMotionPath property="scaleY" valueFrom="1" valueTo="0.95" />
				</s:Animate>
				<s:Animate duration="250">
					<s:SimpleMotionPath property="scaleY" valueFrom="0.95" valueTo="0.75" />
				</s:Animate>
				
				<s:Animate duration="300">
					<s:SimpleMotionPath property="scaleY" valueFrom="0.75" valueTo="1" />
				</s:Animate>
				
			</s:Sequence>
			
		</s:Parallel>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import components.common.tutorial.TutorialPartType;
			import components.common.base.CommonConstans;
			import components.pages.world.windows.locationenter.LocationEnterW;
			import components.pages.world.windows.tutorial.part1.steps.Step6;
			import components.pages.world.windows.tutorial.part1.steps.Step5;
			import components.pages.world.windows.tutorial.part1.steps.Step4;
			import components.pages.world.windows.tutorial.part1.steps.Step3;
			import components.pages.world.windows.tutorial.part1.steps.Step2;
			import components.pages.world.windows.tutorial.part1.steps.Step1;
			import components.common.resources.ResourceType;
			import components.common.quests.medals.MedalType;
			import components.common.quests.medals.MedalObject;
			import components.common.base.access.AccessManager;
			import components.common.base.access.rules.AccessRuleObject;
			import components.common.base.access.rules.AccessRuleType;
			import components.common.base.access.rules.IAccessRule;
			import components.common.base.access.rules.itemrule.AccessItemRule;
			import components.common.base.access.rules.levelrule.AccessLevelRule;
			import components.common.base.access.rules.locationrule.AccessOpenedLocationsRule;
			import components.common.items.ItemProfileObject;
			import components.common.items.ItemType;
			import components.common.worlds.locations.LocationType;
			import components.common.worlds.locations.LocationViewObject;
			
			import mx.controls.Alert;
			import mx.core.IVisualElement;
			import mx.managers.PopUpManager;
			
			
			public function close():void {
				
				//Context.Model.windowsManager.deleteWindow(this);
				PopUpManager.removePopUp(this);
			}
			
			public function closeWrapper():void {
				disapearingAnimation.play();
			}
			
			public function closeWrapper1(e: ContextEvent):void {
				close();
			}
			
			private function panelCreationComplete():void {
				//Context.Model.windowsManager.closeAll(true);
				//Context.Model.windowsManager.addWindow(this);
				apearingAnimation.play();
				
				pulseA.play();
			}
			
			
			private function nextTutorialStep(): void
			{
				closeWrapper();
				
				/* dispatch event */
				Context.Model.dispatchCustomEvent(ContextEvent.IM_SHOW);
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<s:BorderContainer backgroundColor="0x000000"
					   alpha="0.5"
					   width="1000" height="1000"
					   cornerRadius="0"
					   borderVisible="false"
					   />
	
	<s:Label id="tText" x="150" y="259" text="{'Кажется, в рюкзаке\nпоявился новый предмет.\nНужно проверить!'}" fontFamily="mpbc" fontSize="36" color="0xf6da00" textAlign="center">
		<s:filters>
			<s:GlowFilter color="0x97490d" blurX="10" blurY="10" />
			<s:GlowFilter color="0x97490d" blurX="10" blurY="10" />
			<s:GlowFilter color="0x97490d" blurX="10" blurY="10" />
		</s:filters>
	</s:Label>
	
	
	<s:Group x="12" y="474" click="nextTutorialStep();"
			 rollOver="{SoundManager.playSound(SoundManager.BUTTON_CLICK_46, 0.2);}"
			 >
		<s:Button skinClass="skins.buttons.InventoryButtonS" 
				  useHandCursor="true" buttonMode="true"
				  />
		<s:Group id="plusOneGroup" x="74" y="-5" visible="true">
			<s:BitmapImage source="@Embed(source='assets/pageworld/bottompanel/buttons/plusOne.png')" smooth="true" />
		</s:Group>
		
	</s:Group>
	
	
	<tutorial:Arrow id="tArrow" selectedState="{Arrow.STATE_LINEAR_PUPMED}" 
					x="84" y="375"
					customRotation="180"
					/>
	
	<s:controlBarContent/>
</s:Panel>